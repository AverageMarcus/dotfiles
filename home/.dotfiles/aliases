# Rename existing tools
alias _cat=`which cat`
alias _curl=`which curl`
alias _ls="/bin/ls"
alias _grep="/bin/grep"
alias _diff="/usr/bin/diff"
alias _du=`which du`
alias _df=`which df`
alias _find=`which find`
alias _top=`which top`
alias _ps="/bin/ps"
alias _dig=`which dig`
alias _readlink='/usr/bin/readlink'
alias _sed='/usr/bin/sed'
alias _date='/bin/date'
alias _git=`which git`
if command -v $(brew --prefix)/bin/git &>/dev/null; then
  alias _git=$(brew --prefix)/bin/git
fi

#Â Aliases
alias cat='bat '
alias curl='curlie'
alias ls='exa --group-directories-first --icons --header --git --ignore-glob=.git'
alias grep='rg'
alias diff='delta'
alias du='dust'
alias df='duf -hide special'
alias find='fd'
alias find-empty-dirs='fd --type empty --type directory'
alias bandwhich='sudo bandwhich'
alias top='btm'
alias ps='procs'
alias dig='doggo'
alias kubectx='switch'
alias kctx='switch'
alias machine-info='macchina -t Boron --bar'
alias watch='watch '
alias tmp='cd $(mktemp -d)'

# Ensure GNU version of tools are used by default (symlink so they are picked up in scripts also)
which greadlink &>/dev/null && ln -sfn `which greadlink` ~/.bin/readlink
which gsed &>/dev/null && ln -sfn `which gsed` ~/.bin/sed
which gdate &>/dev/null && ln -sfn `which gdate` ~/.bin/date

lt() {
  DEPTH=$(echo $1 | grep "^[0-9]*$")
  if [ "$DEPTH" = "" ]; then
    DEPTH=2
  else
    shift
  fi
  ls -l --tree -L $DEPTH -I ".git|cache|log|logs|node_modules|vendor" $@
}

git() {
  if [ "$1" = "take" ]; then # Git clone then cd into new directory
    if [ $# -gt 2 ]; then
      _git clone ${@:2}
      cd $3
    else
      ORG=$(echo $2 | sed -e 's|https://||' -e 's|/| |g' -e 's|:| |g' | cut -f 2 -d ' ')
      REPO=$(echo $2 | sed -e 's|https://||' -e 's|/| |g' -e 's|:| |g' | cut -f 3 -d ' ' | xargs basename -s .git)

      DST="${HOME}/Code/${ORG}/${REPO}"
      mkdir -p ${DST}

      _git clone $2 ${DST}
      cd ${DST}
    fi
  elif [ "$1" = "commit" ]; then # Sign all commits
    shift
    _git commit -s $@
  elif [ "$1" = "co" ]; then # Sign all commits
    shift
    _git checkout -b $@
  else
    _git $@
  fi
}

